import * as _ from 'lodash-es';
import { instanceOf } from './instance-of.func';
export class ChangeDetectorClass {
    constructor(component) {
        this.component = component;
        this.find(component);
    }
    detach() {
        if (this.cd) {
            this.component[this.cd].detach();
        }
    }
    detect() {
        if (this.cd) {
            this.component[this.cd].detectChanges();
        }
    }
    reattach() {
        if (this.cd) {
            this.component[this.cd].reattach();
        }
    }
    find(component) {
        let found;
        _.each(component, (ChangeDetectorRefInstance, key) => {
            if (component[key] instanceof Object) {
                if (instanceOf(component[key], 'detectChanges')) {
                    if (component[key].detectChanges instanceof Function) {
                        found = key;
                        return false;
                    }
                }
            }
        });
        return this.cd = found;
    }
}
//# sourceMappingURL=change-detector.class.js.map